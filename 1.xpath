# 1
//Patient[@id = '50109113325']
# 
//Patient[@id = '50109113325']/ancestor::*
//Patient[@id = '50109113325']/descendant::*
//Patient[@id = '50109113325']/following-sibling::*
//Patient[@id = '50109113325']/preceding-sibling::*
//Patient[@id = '50109113325']/following::*
//Patient[@id = '50109113325']/preceding::*
//Patient[@id = '50109113325']/attribute::*

#2 Medicininiai išrašai, kuriuos irašė darbuotojas (daktaras), kurio id - D000014
//MedicalRecord[Doctor/@ref = //Employee[@id = 'D000014']/@id]

#3 
# Grąžina Employee žymių skaičių.
count(//Employee)
count(//BirthDate > '2001-01-01')
#Grąžina sumą, kurią pacientai skolingi gyd. įstaigai.
sum(//MedicalDebt)

# <a><b>2</b><c>3</c></a>  sum(//*) = 28 veiks taip:
# number(string(a)) + number(string (b)) + number(string (c))
#
# string (a) = string(descendant::text()) = '23'
# string (b) = string(descendant::text()) = '2'
# string (b) = string(descendant::text()) = '3'


#4, #6, ir #7

5 + 5
5 + 'a'
5 + '5'
5 + true()
'a' + 'a'
'14' + '14'
'11' + false()

5 < 5
5 < '6'
5 < 'a'
5 < true()
'a' < 'a'
'14' < '15'
'11' < false()

5 = 5
5 = '5'
5 = 'a'
5 = true()
'a' = 'a'
'14' = '15'
'11' = false()
'' = false()



# a <- //Amount, jei egzistuoja a, kad 
# number(string(a)) > 79, tuomet true.
//Amount > 79

# a <- //Amount, jei egzistuoja a, kad 
# number(string(a)) > number('o'), tuomet true.
# bet number('o') = NaN, o NaN su bet kokiomis lyginimo operacijomis yra false.
//Amount > 'o'

# a <- //Amount, B <- //DoseSize; jei egzistuoja a ir b, kad 
# bent vienas a > b, tuomet true.
//DoseSize > //Amount
//DoseSize < //Amount


# false, nes boolean(//Amount) = true(), number(true) = 1,
# 1 > 1 yra false.
//Amount > true()

# false, nėra tokio žymės Amount,
# kuri turėtų vieną tekstinį descendant, kuris būtų 79.
//Amount = 79

# false. Koks nors '80' būtų true.
//Amount = 'o'

#Verčia į string kiekvienos aibės elementus.
# false. Nėra tokio kiekio ir dozės dydžio, kuris būtų vienodas.
//DoseSize = //Amount

# true, nes boolean(DoseSize) = true (nes DoseSize netuščia aibė), true = true.
//DoseSize = true()

#jei x nėra number, tai visur bus number(x) vietoj x.
# pirmas //Amount elementas paverstas į number + y.
//Amount + 79
//Amount + 'o'
//Amount + //DoseSize
//Amount + true()


#5
//MedicalRecord[count(descendant::Prescription) >= 2]/ancestor::Patient[MedicalDebt > 500]/FullName